//
// Generated file, do not edit! Created by opp_msgc 4.1 from applications/udpapp/UDPAppNCMsg.msg.
//

#ifndef _UDPAPPNCMSG_M_H_
#define _UDPAPPNCMSG_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "INETDefs.h"
// }}



/**
 * Class generated from <tt>applications/udpapp/UDPAppNCMsg.msg</tt> by opp_msgc.
 * <pre>
 * packet UDPAppNCMsg
 * {
 *     bool isRequest = true;
 *     
 *     int coding_vector[];
 *     int payload_vector[];
 *    
 *     unsigned int generation;
 *     unsigned int total_pkt_num;		
 * 
 * }
 * </pre>
 */
class UDPAppNCMsg : public ::cPacket
{
  protected:
    bool isRequest_var;
    int *coding_vector_var; // array ptr
    unsigned int coding_vector_arraysize;
    int *payload_vector_var; // array ptr
    unsigned int payload_vector_arraysize;
    unsigned int generation_var;
    unsigned int total_pkt_num_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const UDPAppNCMsg&);

  public:
    UDPAppNCMsg(const char *name=NULL, int kind=0);
    UDPAppNCMsg(const UDPAppNCMsg& other);
    virtual ~UDPAppNCMsg();
    UDPAppNCMsg& operator=(const UDPAppNCMsg& other);
    virtual UDPAppNCMsg *dup() const {return new UDPAppNCMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual bool getIsRequest() const;
    virtual void setIsRequest(bool isRequest_var);
    virtual void setCoding_vectorArraySize(unsigned int size);
    virtual unsigned int getCoding_vectorArraySize() const;
    virtual int getCoding_vector(unsigned int k) const;
    virtual void setCoding_vector(unsigned int k, int coding_vector_var);
    virtual void setPayload_vectorArraySize(unsigned int size);
    virtual unsigned int getPayload_vectorArraySize() const;
    virtual int getPayload_vector(unsigned int k) const;
    virtual void setPayload_vector(unsigned int k, int payload_vector_var);
    virtual unsigned int getGeneration() const;
    virtual void setGeneration(unsigned int generation_var);
    virtual unsigned int getTotal_pkt_num() const;
    virtual void setTotal_pkt_num(unsigned int total_pkt_num_var);
};

inline void doPacking(cCommBuffer *b, UDPAppNCMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, UDPAppNCMsg& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>applications/udpapp/UDPAppNCMsg.msg</tt> by opp_msgc.
 * <pre>
 * packet UDPAppNCMsg_Butterfly
 * {
 *     bool isCombination = false;
 * 	unsigned char payload[];	   
 *     unsigned int generation;
 *     double send_time;
 * 
 * }
 * </pre>
 */
class UDPAppNCMsg_Butterfly : public ::cPacket
{
  protected:
    bool isCombination_var;
    unsigned char *payload_var; // array ptr
    unsigned int payload_arraysize;
    unsigned int generation_var;
    double send_time_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const UDPAppNCMsg_Butterfly&);

  public:
    UDPAppNCMsg_Butterfly(const char *name=NULL, int kind=0);
    UDPAppNCMsg_Butterfly(const UDPAppNCMsg_Butterfly& other);
    virtual ~UDPAppNCMsg_Butterfly();
    UDPAppNCMsg_Butterfly& operator=(const UDPAppNCMsg_Butterfly& other);
    virtual UDPAppNCMsg_Butterfly *dup() const {return new UDPAppNCMsg_Butterfly(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual bool getIsCombination() const;
    virtual void setIsCombination(bool isCombination_var);
    virtual void setPayloadArraySize(unsigned int size);
    virtual unsigned int getPayloadArraySize() const;
    virtual unsigned char getPayload(unsigned int k) const;
    virtual void setPayload(unsigned int k, unsigned char payload_var);
    virtual unsigned int getGeneration() const;
    virtual void setGeneration(unsigned int generation_var);
    virtual double getSend_time() const;
    virtual void setSend_time(double send_time_var);
};

inline void doPacking(cCommBuffer *b, UDPAppNCMsg_Butterfly& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, UDPAppNCMsg_Butterfly& obj) {obj.parsimUnpack(b);}


#endif // _UDPAPPNCMSG_M_H_
